# Classes
module DSLCompose
  class Reader
    @klass: Class
    @dsl_name: Symbol
    @dsl: DSL
    @dsl_defining_class: Class

    def initialize: (untyped klass, Symbol dsl_name) -> void
    def last_execution: -> (ExecutionReader | nil)
    def last_execution!: -> ExecutionReader
    def executions: -> Array[ExecutionReader]
    def ancestor_executions: -> Array[ExecutionReader]
    def all_executions: -> Array[ExecutionReader]
    def dsl_used?: -> bool
    def dsl_used_on_ancestors?: -> bool
    def dsl_used_on_class_or_ancestors?: -> bool

    class DSLNotFound < StandardError
    end
  end
end
