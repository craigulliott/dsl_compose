# Classes
module DSLCompose
  class DSL
    class Interpreter
      @dsl: DSL

      def initialize: (DSL dsl) -> void
      def instance_eval: () -> void

      private
      def description: (String description) -> void
      def namespace: (Symbol namespace) -> void
      def title: (String title) -> void
      def add_method: (Symbol name, ?required: nil) -> void
      def add_unique_method: (Symbol name, ?required: nil) -> void
      def optional: (Symbol name, argument_type `type`, ?array: bool) -> void
      def requires: (Symbol name, argument_type `type`, ?kwarg: bool, ?array: bool) -> void
    end
  end
end
