# Classes
module DSLCompose
  class DSL
    class Arguments
      class Argument
        class Interpreter
          @argument: Argument

          def initialize: (Argument argument) -> void
          def instance_eval: () -> void

          private
          def description: (String description) -> void
          def validate_greater_than: (Numeric value) -> void
          def validate_greater_than_or_equal_to: (Numeric value) -> void
          def validate_less_than: (Numeric value) -> void
          def validate_less_than_or_equal_to: (Numeric value) -> void
          def validate_equal_to: (Numeric value) -> void
          def validate_length: (?minimum: Numeric?, ?maximum: Numeric?, ?is: Numeric?) -> void
          def validate_not_in: ([Numeric | Symbol | String] values) -> void
          def validate_in: ([Numeric | Symbol | String] values) -> void
          def validate_format: (Regexp regex) -> void
        end
      end
    end
  end
end